service: gaffer-backend

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${env:STAGE}
  region: ${env:AWS_REGION}
  environment:
    STAGE: ${env:STAGE}
    AWS_SES_REGION: ${env:AWS_SES_REGION}
    AWS_SES_IDENTITY: ${env:AWS_SES_IDENTITY}
    PRIMARY_CONTACT_EMAIL: ${env:PRIMARY_CONTACT_EMAIL}
    TECHNICAL_CONTACT_EMAIL: ${env:TECHNICAL_CONTACT_EMAIL}
    NOREPLY_EMAIL: ${env:NOREPLY_EMAIL}
    GOOGLE_RECAPTCHA_VERIFY_URL: ${env:GOOGLE_RECAPTCHA_VERIFY_URL}    
    GOOGLE_RECAPTCHA_SECRET_KEY: ${env:GOOGLE_RECAPTCHA_SECRET_KEY}
    MESSAGES_TABLE_NAME: ${env:MESSAGES_TABLE_NAME}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource:
        - '*'
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - 'Fn::Join':
            - ':'
            -
              - arn:aws:dynamodb
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - table/${env:MESSAGES_TABLE_NAME}-test
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - 'Fn::Join':
            - ':'
            -
              - arn:aws:dynamodb
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - table/${env:MESSAGES_TABLE_NAME}-prod        
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource: 
        - 'Fn::Join':
            - ':'
            -
              - arn:aws:ses
              - ${env:AWS_SES_REGION}
              - Ref: AWS::AccountId
              - '*'

functions:
  contactMe:
    handler: src/lambda.handler
    url:
      cors: true

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:MESSAGES_TABLE_NAME}-${env:STAGE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
          
plugins:
  - serverless-plugin-aws-alerts

custom:
  alerts:
    stages:
      - test
      - prod
    topics:
      alarm: 
        topic: ${self:service}-${env:STAGE}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: ${env:TECHNICAL_CONTACT_EMAIL}
    alarms:
      - functionErrors
      - functionThrottles
      - functionInvocations
      - functionDuration                  
