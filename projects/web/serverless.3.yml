service: web

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ap-southeast-2
  profile: charliemoukbel-deploy

package:
  exclude:
    - secrets.yml

custom:
  stage: ${opt:stage, self:provider.stage}
  env: ${file(env.yml):${self:custom.stage}}    
  secrets: ${file(secrets.yml):${self:custom.stage}}    

resources:
  Resources:

    RootBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.env.DOMAIN_NAME}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    WWWBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: www.${self:custom.env.DOMAIN_NAME}
        WebsiteConfiguration:
          RedirectAllRequestsTo:
            HostName: 
              'Fn::GetAtt':
                - RootBucket
                - DomainName

    RootBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: 
          Ref: RootBucket
        PolicyDocument:
          Statement:
            Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject  
            Resource: 
              'Fn::Join':
                - ''
                - 
                  - 'Fn::GetAtt':
                      - RootBucket
                      - Arn
                  - /*

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          DefaultRootObject: index.html
          Origins:
            - DomainName:
                'Fn::GetAtt':
                  - RootBucket
                  - DomainName            
              Id: S3Origin
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: match-viewer
          Aliases: 
            - ${self:custom.env.DOMAIN_NAME}
            - www.${self:custom.env.DOMAIN_NAME}
          DefaultCacheBehavior: 
            Compress: true
            DefaultTTL: 86400
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: allow-all
            ForwardedValues:
              QueryString: true

    CloudFrontDns:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${self:custom.env.HOSTED_ZONE}
        Name: ${self:custom.env.DOMAIN_NAME}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: 
            'Fn::GetAtt': 
              - CloudFrontDistribution
              - DomainName

    WWWCloudFrontDns:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${self:custom.env.HOSTED_ZONE}
        Name: www.${self:custom.env.DOMAIN_NAME}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: 
            'Fn::GetAtt': 
              - CloudFrontDistribution
              - DomainName              